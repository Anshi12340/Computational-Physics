import numpy as np
import Library
def f(x):
 
    return x**2/((1+(x**4)))
#for N=7
x00 = 0.000000000000000
x10 = 0.405845151377397
x10_=-0.405845151377397
x20 = 0.741531185599394
x20_=-0.741531185599394
x30 = 0.949107912342759
x30_=-0.949107912342759
a00 = 0.417959183673469
a10 = 0.381830050505119
a20=0.279705391489277
a30 = 0.129484966168870
#for N=14
x1 = 0.108054948707344
x1_=-0.108054948707344
x2 = 0.319112368927890
x2_=-0.319112368927890
x3 = 0.515248636358154
x3_=-0.515248636358154
x4=0.687292904811685
x4_=-0.687292904811685
x5 = 0.827201315069765
x5_=-0.827201315069765
x6=0.928434883663574
x6_=-0.928434883663574
x7 = 0.986283808696812
x7_=-0.986283808696812
a1 = 0.215263853463158
a2 = 0.205198463721290
a3 = 0.185538397477938
a4 = 0.157203167158194
a5 = 0.121518570687903
a6 = 0.080158087159760
a7 = 0.035119460331752
L=[x00,x10,x10_,x20,x20_,x30,x30_]
L1=[a00,a10,a10,a20,a20,a30,a30]
L_=[x1,x1_,x2,x2_,x3,x3_,x4,x4_,x5,x5_,x6,x6_,x7,x7_]
L1_=[a1,a1,a2,a2,a3,a3,a4,a4,a5,a5,a6,a6,a7,a7]

def f1(x):
    return np.sqrt(1+(x**4))

#Question 1
print(Library.Gaussian(f,-1,1,L_,L1_))
#Output=0.4874954942585558 
#no. of iterations are 14

#question2 
print(Library.Gaussian(f1,0,1,L_,L1_))
#output 1.0894294132248172
#number of iterations are 7
print(Library.Simpson(0,1,24,(1)/24,f1))
#output 1.0894294115232384 upto 8 decimal places
#number of iteratiosn are 16
#number of iterations are 24 and it is correct upto 9 decimal places  1.0894294130768618
